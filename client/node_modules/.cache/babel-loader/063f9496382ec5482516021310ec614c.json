{"ast":null,"code":"import _classCallCheck from\"/Users/jeffdeutsch/Documents/react-course/crown-clothing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jeffdeutsch/Documents/react-course/crown-clothing/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jeffdeutsch/Documents/react-course/crown-clothing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jeffdeutsch/Documents/react-course/crown-clothing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jeffdeutsch/Documents/react-course/crown-clothing/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Route}from'react-router-dom';import{createStructuredSelector}from'reselect';import{connect}from'react-redux';import{fetchCollectionsStartAsync as _fetchCollectionsStartAsync}from'../../redux/shop/shop.actions';import{selectIsCollectionFetching,selectIsCollectionsLoaded}from'../../redux/shop/shop.selectors';import WithSpinner from'../../components/with-spinner/with-spinner.component';import CollectionOverview from'../../components/collection-overview/collection-overview.component';import CollectionPage from'../collection/collection.component';var CollectionsOverviewWithSpinner=WithSpinner(CollectionOverview);var CollectionsPageWithSpinner=WithSpinner(CollectionPage);var ShopPage=/*#__PURE__*/function(_React$Component){_inherits(ShopPage,_React$Component);function ShopPage(){_classCallCheck(this,ShopPage);return _possibleConstructorReturn(this,_getPrototypeOf(ShopPage).apply(this,arguments));}_createClass(ShopPage,[{key:\"componentDidMount\",value:function componentDidMount(){var fetchCollectionsStartAsync=this.props.fetchCollectionsStartAsync;fetchCollectionsStartAsync();}},{key:\"render\",value:function render(){var _this$props=this.props,match=_this$props.match,isFetchingCollections=_this$props.isFetchingCollections,isCollectionsLoaded=_this$props.isCollectionsLoaded;return React.createElement(\"div\",{className:\"shop-page\"},React.createElement(Route,{exact:true,path:\"\".concat(match.path),render:function render(props){return React.createElement(CollectionsOverviewWithSpinner,Object.assign({isLoading:isFetchingCollections},props));}}),React.createElement(Route,{path:\"\".concat(match.path,\"/:collectionId\"),render:function render(props){return React.createElement(CollectionsPageWithSpinner,Object.assign({isLoading:!isCollectionsLoaded},props));}}));}}]);return ShopPage;}(React.Component);;var mapStateToProps=createStructuredSelector({isFetchingCollections:selectIsCollectionFetching,isCollectionsLoaded:selectIsCollectionsLoaded});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchCollectionsStartAsync:function fetchCollectionsStartAsync(){return dispatch(_fetchCollectionsStartAsync());}};};export default connect(mapStateToProps,mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/jeffdeutsch/Documents/react-course/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","props","match","isFetchingCollections","isCollectionsLoaded","path","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"qsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,0BAA0B,GAA1BA,CAAAA,2BAAT,KAA2C,+BAA3C,CACA,OAASC,0BAAT,CAAqCC,yBAArC,KAAsE,iCAAtE,CAEA,MAAOC,CAAAA,WAAP,KAAwB,sDAAxB,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,oEAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CAEA,GAAMC,CAAAA,8BAA8B,CAAGH,WAAW,CAACC,kBAAD,CAAlD,CACA,GAAMG,CAAAA,0BAA0B,CAAGJ,WAAW,CAACE,cAAD,CAA9C,C,GAEMG,CAAAA,Q,4SACkB,IACRR,CAAAA,0BADQ,CACuB,KAAKS,KAD5B,CACRT,0BADQ,CAEhBA,0BAA0B,GAC7B,C,uCAEQ,iBACuD,KAAKS,KAD5D,CACEC,KADF,aACEA,KADF,CACSC,qBADT,aACSA,qBADT,CACgCC,mBADhC,aACgCA,mBADhC,CAEL,MACI,4BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EACI,KAAK,KADT,CACU,IAAI,WAAKF,KAAK,CAACG,IAAX,CADd,CAEI,MAAM,CAAE,gBAAAJ,KAAK,QACT,qBAAC,8BAAD,gBAAgC,SAAS,CAAEE,qBAA3C,EAAsEF,KAAtE,EADS,EAFjB,EADJ,CAOI,oBAAC,KAAD,EACI,IAAI,WAAKC,KAAK,CAACG,IAAX,kBADR,CAEI,MAAM,CAAE,gBAAAJ,KAAK,QAAK,qBAAC,0BAAD,gBAA4B,SAAS,CAAE,CAACG,mBAAxC,EAAiEH,KAAjE,EAAL,EAFjB,EAPJ,CADJ,CAeH,C,sBAvBkBb,KAAK,CAACkB,S,EAwB5B,CAED,GAAMC,CAAAA,eAAe,CAAGjB,wBAAwB,CAAC,CAC7Ca,qBAAqB,CAAEV,0BADsB,CAE7CW,mBAAmB,CAAEV,yBAFwB,CAAD,CAAhD,CAKA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCjB,0BAA0B,CAAE,4CAAMiB,CAAAA,QAAQ,CAACjB,2BAA0B,EAA3B,CAAd,EADQ,CAAL,EAAnC,CAIA,cAAeD,CAAAA,OAAO,CAClBgB,eADkB,CAElBC,kBAFkB,CAAP,CAGbR,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n    componentDidMount() {\n        const { fetchCollectionsStartAsync } = this.props;\n        fetchCollectionsStartAsync();\n    }\n\n    render() {\n        const {match, isFetchingCollections, isCollectionsLoaded} = this.props;\n        return (\n            <div className='shop-page'>\n                <Route \n                    exact path={`${match.path}`} \n                    render={props => (\n                        <CollectionsOverviewWithSpinner isLoading={isFetchingCollections} {...props} />\n                    )}\n                />\n                <Route \n                    path={`${match.path}/:collectionId`} \n                    render={props => (<CollectionsPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />\n                    )}\n                />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = createStructuredSelector({\n    isFetchingCollections: selectIsCollectionFetching,\n    isCollectionsLoaded: selectIsCollectionsLoaded \n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});  \n\nexport default connect(\n    mapStateToProps, \n    mapDispatchToProps\n)(ShopPage);"]},"metadata":{},"sourceType":"module"}